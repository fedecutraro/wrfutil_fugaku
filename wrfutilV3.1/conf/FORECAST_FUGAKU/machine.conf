#!/bin/bash 

#### CLUSTER ###
export MACHINE='FUGAKU'                                         # Options HYDRA, FUGAKU , FUGAKUPPS
export ICORE=48                                                 # Number of processes per NODE requested to the queue
export INODE=1                                                  # Number of NODES requested to the queue
export QUEUESYS='PJM'                                           # Queue system [SLURM | PBS | PBSPRO | SGE | PBS_block | SSH | PJM ]
export QUEUE='small'                                            # Queue name (depends on the machine)
export QEXCLU=0                                                 # If JOBS will be NODE exclusive [Currently not being used]
export QSUB_ROOT=""
export TOTAL_TIME_LIMIT="10:00:00"                              # When running the entire experiment as a JOB, then this sets the overall time limit.
export INTERACTIVE_JOB=1                                        # 1 - means interactive JOB , any other value inidcate regular JOB.

#Fugaku exclusive flags
export LLIO_VOL="/vol0004"                                      # Disk volume to be used in the computation nodes [Fugaku PJM only]
export FUGAKU_GROUP="ra000007"                                  # Fugaku_group associated to the user [Fugaku PJM only]
export PARALLEL_THREADS=1                                       # Set the number of OMP_THREADS in Fugaku [Fugaku PJM only]

##############
# Paralelizacion
##############
export LETKFPROC=12                                                     # Number of procs per node for LETKF (if LETKFNODE > 1, then ICORE will be assumed)
export LETKFTHREAD=1                                                    # Number of OMP THREADS for LETKF
export LETKFNODE=4                                                      # Number of nodes for LETKF
export LETKFWALLTIME="03:00:00"                                         # Maximum wall time for LETKF (for sequeantial queue JOBS only)

export WPSNODE=1                                                        # Number of nodes for WPS (for each ensemble member)
export WPSPROC=4                                                        # Number of procs per node for WPS (if WPSNODE > 1, then ICORE will be assumed)
export WPSTHREAD=1                                                      # Number of OMP THREADS for WPS 
export WPSWALLTIME="03:00:00"                                           # Maximum wall time for WPS (for sequeantial queue JOBS only)
export WPS_RUNTIME_FLAGS="-Wl,-T"                                       # Runtime flags (for example endian conversion)

export PERTNODE=1                                                       # Number of nodes for PERT MET EM (usually one, this application do not support multiple nodes)
export PERTPROC=48                                                      # Number of procs per node for PERT 
export PERTTHREAD=$PERTPROC                                             # Number of OMP THREADS for PERT (must be equal to $PERTPROC)
export PERTWALLTIME="03:00:00"                                          # Maximum wall time for PERT (for sequeantial queue JOBS only)

export WRFNODE=1                                                        # Number of nodes for WRF (for each ensemble member)
export WRFPROC=12                                                       # Number of procs per node for WRF (if WRFNODE > 1, then ICORE will be assumed)
export WRFTHREAD=1                                                      # Number of OMP THREADS for WRF
export WRFWALLTIME="03:00:00"                                           # Maximum wall time for WRF (for sequeantial queue JOBS only)
export WRF_RUNTIME_FLAGS="-Wl,-T"                                       # Runtime flags (for example endian conversion)

#Specify machine dependent enviroment settings
if [ $MACHINE = "FUGAKU"  ] ; then

  export PYTHON=/home/ra000007/a04037/anaconda3/bin/python
  export LD_LIBRARY_PATH=/lib64:/usr/lib64:/opt/FJSVxtclanga/tcsds-latest/lib64:/opt/FJSVxtclanga/tcsds-latest/lib/:/vol0004/ra000007/data/jruiz/comp_libs_fujitsu/netcdf/lib:$LD_LIBRARY_PATH
  export I_MPI_SPAWN=on
  export MPIEXEC=mpiexec

elif [ $MACHINE = "FUGAKUPPS" ] ; then

  . /opt/intel/oneapi/setvars.sh intel64
  export PYTHON=/home/ra000007/a04037/anaconda3/bin/python
  export LD_LIBRARY_PATH=/home/ra000007/a04037/data/comp_libs/grib2/lib/:/home/ra000007/a04037/data/comp_libs/netcdf/lib/:$LD_LIBRARY_PATH
  export I_MPI_SPAWN=on
  set FI_TCP_IFACE=lo
  export MPIEXEC=mpiexec

elif [ $MACHINE = "HYDRA" ] ; then

  source /opt/load-libs.sh 1
  export PYTHON=/opt/intel/oneapi/intelpython/latest/bin/python
  source activate letkf_wrf
  export LD_LIBRARY_PATH=/home/jruiz/salidas/libpng-1.2.50/lib/:$LD_LIBRARY_PATH
  export HDF5_USE_FILE_LOCKING=FALSE
  export MPIEXEC=mpiexec

fi

